version: '3.8'

services:
  web:
    build:
      context: .
    environment:
      - ENTRYPOINT=web
    volumes:
      - .:/app
    ports:
      - "${APPLICATION_PORT}:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - kafka
      - zookeeper
    restart: always
    networks:
      - app_network

  celery_worker:
    build:
      context: .
    environment:
      - ENTRYPOINT=celery_worker
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - kafka
      - zookeeper
    restart: always
    networks:
      - app_network

  celery_beat:
    build:
      context: .
    environment:
      - ENTRYPOINT=celery_beat
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - kafka
      - zookeeper
    restart: always
    networks:
      - app_network

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app_network

  redis:
    image: redis:alpine
    ports:
      - "${REDIS_PORT}:6379"
    restart: unless-stopped
    networks:
      - app_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app_network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
